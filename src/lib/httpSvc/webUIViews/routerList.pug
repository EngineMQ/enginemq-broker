extends _base
block content
    .row
        .col-md-6
            .btn-group(role='group')
                a.btn.btn-info(href='/resources/routers/new')
                    i.fa.fa-plus
                    | 
                    | New router
                a.btn.btn-default.fileup-btn(href='#')
                    i.fa.fa-upload
                    | 
                    | Import Yaml
                    input#upload-yaml(type='file')
        .col-md-6
            .float-right
                a.btn.btn-default(href='/resources/routers/map')
                    i.fa.fa-map
                    | 
                    | Show in map
    br
    .row
        .col-md-12
            .card

                .card-body.table-responsive.p-0
                    table.table.table-hover.text-nowrap
                        thead
                            tr
                                th Description
                                th Routes
                                th
                        tbody
                            each router in routers
                                tr
                                    td
                                        h5 
                                            a(href='/resources/router/' + router.resourceId)
                                                = router.description
                                    td
                                        if (router.hold)
                                            span.badge.badge-success Copy
                                        else
                                            span.badge.badge-warning Move
                                        br
                                        each route in router.routes
                                            = route.from
                                            | 
                                            small
                                                i.fa.fa-arrow-right
                                            | 
                                            = route.to
                                            br
                                    td(width='1px')
                                        .btn-group(role='group')
                                            a.btn.btn-secondary.btn-xs(href='/resources/routers/copy/' + router.resourceId)
                                                i.fa.fa-copy
                                                | 
                                                | Copy
                                            a.btn.btn-secondary.btn-xs(href='/resources/router/' + router.resourceId + '/yaml')
                                                i.fa.fa-download
                                                | 
                                                | Yaml export
                                            button.btn.btn-danger.btn-xs(href='#' onclick='deleteRouter("' + router.resourceId + '", "' + router.description + '")')
                                                i.fa.fa-times
                                                | 
                                                | Delete



    script(type='text/javascript').
        function deleteRouter(resourceId, description)
        {
            Swal.fire({
                title: 'Delete router',
                text: `Do you want to delete '${description}' router?`,
                confirmButtonText: 'Delete',
                showCancelButton: true,
            }).then((result) => {
                if (result.isConfirmed) {
                    $.post("/resources/routers/delete", { resourceId })
                    .done(function() {
                        toastr.success('Router deleted', 'OK');
                        reloadContentWrapper();
                    })
                    .fail(function(jqXHR, textStatus, errorThrown) {
                        toastr.error(errorThrown, 'Error');
                    });        
                }
            })
        }
        $(function() {
            $.fileup({
                url: '/file/upload',
                inputID: 'upload-yaml',
                queueID: 'notused',
                autostart: true,
                fieldName: 'resourceYaml',
                sizeLimit: 1 * 1000 * 1000,
                filesLimit: 1,
                onSuccess: function(response, file_number, file) {
                    toastr.success('Upload success: ' + file.name, 'OK');
                },
                onError: function(event, file, file_number) {
                    toastr.error('Upload error: ' + event, 'Error');
                },
            });
        });        
